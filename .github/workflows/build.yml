# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build & Release

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --immutable
      - name: Run lint
        run: yarn lint

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [20.x]
        exclude:
          #          - os: macos-latest
          #            node-version: 12.x
          #          - os: macos-latest
          #            node-version: 15.x
          #          - os: windows-latest
          #            node-version: 12.x
          - os: windows-latest
            node-version: 20.x

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --immutable
      - name: Run test
        run: yarn test

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 500000
      - name: Run build
        run: yarn tsc --build
      - name: Run build
        run: yarn build

  deploy-packages:
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    if: ${{ github.event_name != 'pull_request' && (contains(github.ref, 'master') || contains(github.ref, 'alpha')  || contains(github.ref, 'beta') || contains(github.ref, 'rc')) }}

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 500000
      - name: Release packages
        env:
          CI: true
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: yarn release
      - uses: actions/upload-artifact@v4
        with:
          name: packages
          path: |
            package.json
            packages/*/package.json

#      - name: "Trigger Website workflow"
#        run: |
#          curl -X POST  https://api.github.com/repos/tsedio/tsed-cli/actions/workflows/website.yml/dispatches \
#          -H 'Accept: application/vnd.github.everest-preview+json' \
#          -H 'Authorization: Bearer ${{secrets.GH_TOKEN}}' \
#          --data '{"ref": "production"}'
