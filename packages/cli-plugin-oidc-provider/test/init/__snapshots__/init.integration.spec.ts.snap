// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Init OIDC Provider project > should generate a project with oidc 1`] = `
[
  "project-name",
  "project-name/.barrels.json",
  "project-name/.dockerignore",
  "project-name/.gitignore",
  "project-name/.swcrc",
  "project-name/Dockerfile",
  "project-name/README.md",
  "project-name/docker-compose.yml",
  "project-name/nodemon.json",
  "project-name/package.json",
  "project-name/processes.config.cjs",
  "project-name/src",
  "project-name/src/Server.ts",
  "project-name/src/config",
  "project-name/src/config/envs",
  "project-name/src/config/envs/index.ts",
  "project-name/src/config/index.ts",
  "project-name/src/config/logger",
  "project-name/src/config/logger/index.ts",
  "project-name/src/config/oidc",
  "project-name/src/config/oidc/index.ts",
  "project-name/src/controllers/oidc",
  "project-name/src/controllers/oidc/InteractionsController.spec.ts",
  "project-name/src/controllers/oidc/InteractionsController.ts",
  "project-name/src/controllers/rest",
  "project-name/src/controllers/rest/HelloWorldController.ts",
  "project-name/src/index.ts",
  "project-name/src/interactions",
  "project-name/src/interactions/ConsentInteraction.spec.ts",
  "project-name/src/interactions/ConsentInteraction.ts",
  "project-name/src/interactions/CustomInteraction.ts",
  "project-name/src/interactions/LoginInteraction.spec.ts",
  "project-name/src/interactions/LoginInteraction.ts",
  "project-name/src/interactions/__mock__",
  "project-name/src/interactions/__mock__/oidcContext.fixture.ts",
  "project-name/src/models",
  "project-name/src/models/Account.ts",
  "project-name/src/services",
  "project-name/src/services/Accounts.ts",
  "project-name/tsconfig.base.json",
  "project-name/tsconfig.json",
  "project-name/tsconfig.node.json",
  "project-name/views",
  "project-name/views/consent.ejs",
  "project-name/views/forms",
  "project-name/views/forms/consent-form.ejs",
  "project-name/views/forms/login-form.ejs",
  "project-name/views/forms/select-account-form.ejs",
  "project-name/views/login.ejs",
  "project-name/views/partials",
  "project-name/views/partials/footer.ejs",
  "project-name/views/partials/header.ejs",
  "project-name/views/partials/login-help.ejs",
  "project-name/views/repost.ejs",
  "project-name/views/select_account.ejs",
]
`;

exports[`Init OIDC Provider project > should generate a project with oidc 2`] = `
"import {join} from "node:path";
import {Configuration} from "@tsed/di";
import {application} from "@tsed/platform-http";
import "@tsed/platform-log-request"; // remove this import if you don&#x27;t want log request
import "@tsed/platform-express"; // /!\\ keep this import
import "@tsed/ajv";
import "@tsed/oidc-provider";
import {config} from "./config/index.js";
import * as rest from "./controllers/rest/index.js";
import * as pages from "./controllers/pages/index.js";
import {InteractionsController} from "./controllers/oidc/InteractionsController.js";

@Configuration({
  ...config,
  acceptMimes: ["application/json"],
  httpPort: process.env.PORT || 8083,
  httpsPort: false, // CHANGE
  mount: {
    "/rest": [
      ...Object.values(rest)
    ],
    "/": [
      InteractionsController
    ]
  },
  middlewares: [
    "cors",
    "cookie-parser",
    "compression",
    "method-override",
    "json-parser",
    { use: "urlencoded-parser", options: { extended: true }}
  ],
  views: {
    root: join(process.cwd(), "../views"),
    extensions: {
      ejs: "ejs"
    }
  }
})
export class Server {
  protected app = application();
}
"
`;

exports[`Init OIDC Provider project > should generate a project with oidc and swagger 1`] = `
[
  "project-name",
  "project-name/.barrels.json",
  "project-name/.dockerignore",
  "project-name/.gitignore",
  "project-name/.swcrc",
  "project-name/Dockerfile",
  "project-name/README.md",
  "project-name/docker-compose.yml",
  "project-name/nodemon.json",
  "project-name/package.json",
  "project-name/processes.config.cjs",
  "project-name/src",
  "project-name/src/Server.ts",
  "project-name/src/config",
  "project-name/src/config/envs",
  "project-name/src/config/envs/index.ts",
  "project-name/src/config/index.ts",
  "project-name/src/config/logger",
  "project-name/src/config/logger/index.ts",
  "project-name/src/config/oidc",
  "project-name/src/config/oidc/index.ts",
  "project-name/src/controllers/oidc",
  "project-name/src/controllers/oidc/InteractionsController.ts",
  "project-name/src/controllers/pages",
  "project-name/src/controllers/pages/IndexController.ts",
  "project-name/src/controllers/rest",
  "project-name/src/controllers/rest/HelloWorldController.ts",
  "project-name/src/index.ts",
  "project-name/src/interactions",
  "project-name/src/interactions/ConsentInteraction.ts",
  "project-name/src/interactions/CustomInteraction.ts",
  "project-name/src/interactions/LoginInteraction.ts",
  "project-name/src/models",
  "project-name/src/models/Account.ts",
  "project-name/src/services",
  "project-name/src/services/Accounts.ts",
  "project-name/tsconfig.base.json",
  "project-name/tsconfig.json",
  "project-name/tsconfig.node.json",
  "project-name/views",
  "project-name/views/consent.ejs",
  "project-name/views/forms",
  "project-name/views/forms/consent-form.ejs",
  "project-name/views/forms/login-form.ejs",
  "project-name/views/forms/select-account-form.ejs",
  "project-name/views/login.ejs",
  "project-name/views/partials",
  "project-name/views/partials/footer.ejs",
  "project-name/views/partials/header.ejs",
  "project-name/views/partials/login-help.ejs",
  "project-name/views/repost.ejs",
  "project-name/views/select_account.ejs",
  "project-name/views/swagger.ejs",
]
`;

exports[`Init OIDC Provider project > should generate a project with oidc and swagger 2`] = `
"import {join} from "node:path";
import {Configuration} from "@tsed/di";
import {application} from "@tsed/platform-http";
import "@tsed/platform-log-request"; // remove this import if you don&#x27;t want log request
import "@tsed/platform-express"; // /!\\ keep this import
import "@tsed/ajv";
import "@tsed/swagger";
import "@tsed/oidc-provider";
import {config} from "./config/index.js";
import * as rest from "./controllers/rest/index.js";
import * as pages from "./controllers/pages/index.js";
import {InteractionsController} from "./controllers/oidc/InteractionsController.js";

@Configuration({
  ...config,
  acceptMimes: ["application/json"],
  httpPort: process.env.PORT || 8083,
  httpsPort: false, // CHANGE
  mount: {
    "/rest": [
      ...Object.values(rest)
    ],
    "/": [
      ...Object.values(pages),
      InteractionsController
    ]
  },
  swagger: [
    {
      path: "/doc",
      specVersion: "3.0.1"
    }
  ],
  middlewares: [
    "cors",
    "cookie-parser",
    "compression",
    "method-override",
    "json-parser",
    { use: "urlencoded-parser", options: { extended: true }}
  ],
  views: {
    root: join(process.cwd(), "../views"),
    extensions: {
      ejs: "ejs"
    }
  }
})
export class Server {
  protected app = application();
}
"
`;
