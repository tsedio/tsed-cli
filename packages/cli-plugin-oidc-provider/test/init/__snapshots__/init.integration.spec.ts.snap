// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Init OIDC Provider project > should generate a project with oidc 2`] = `
"import "@tsed/ajv";
import "@tsed/platform-log-request";

import { Configuration } from "@tsed/di";
import { application } from "@tsed/platform-http";
import { join } from "node:path";

import { config } from "@/config/config.js";
import "@tsed/oidc-provider";
import "@tsed/platform-express";
import { InteractionsController } from "./controllers/oidc/InteractionsController.js";
import * as pages from "./controllers/pages/index.js";
import * as rest from "./controllers/rest/index.js";

@Configuration({
  ...config,
  acceptMimes: ["application/json"],
  httpPort: process.env.PORT || 8083,
  httpsPort: false, // CHANGE
  mount: {
    "/rest": [...Object.values(rest), ...Object.values(rest)],
    "/": [...Object.values(pages), InteractionsController, ...Object.values(pages), InteractionsController]
  },
  views: {
    root: join(process.cwd(), "../views"),
    extensions: {
      ejs: "ejs"
    }
  },
  middlewares: [
    "cors",
    "cookie-parser",
    "compression",
    "method-override",
    "json-parser",
    {
      "use": "urlencoded-parser",
      "options": {
        "extended": true
      }
    }
  ]
})
export class Server {
  protected app = application();
}
"
`;

exports[`Init OIDC Provider project > should generate a project with oidc and swagger 1`] = `
[
  "project-name",
  "project-name/.barrels.json",
  "project-name/.dockerignore",
  "project-name/.gitignore",
  "project-name/.swcrc",
  "project-name/Dockerfile",
  "project-name/README.md",
  "project-name/docker-compose.yml",
  "project-name/nodemon.json",
  "project-name/package.json",
  "project-name/processes.config.cjs",
  "project-name/src/Server.ts",
  "project-name/src/config/config.ts",
  "project-name/src/config/logger/index.ts",
  "project-name/src/config/oidc/index.ts",
  "project-name/src/config/utils/index.ts",
  "project-name/src/controllers/pages/IndexController.ts",
  "project-name/src/controllers/rest/HelloWorldController.ts",
  "project-name/src/index.ts",
  "project-name/tsconfig.base.json",
  "project-name/tsconfig.json",
  "project-name/tsconfig.node.json",
  "project-name/views/swagger.ejs",
]
`;

exports[`Init OIDC Provider project > should generate a project with oidc and swagger 2`] = `
"import "@tsed/ajv";
import "@tsed/platform-log-request";

import { Configuration } from "@tsed/di";
import { application } from "@tsed/platform-http";
import { join } from "node:path";

import { config } from "@/config/config.js";
import "@tsed/oidc-provider";
import "@tsed/platform-express";
import "@tsed/swagger";
import { InteractionsController } from "./controllers/oidc/InteractionsController.js";
import * as pages from "./controllers/pages/index.js";
import * as rest from "./controllers/rest/index.js";

@Configuration({
  ...config,
  acceptMimes: ["application/json"],
  httpPort: process.env.PORT || 8083,
  httpsPort: false, // CHANGE
  mount: {
    "/rest": [...Object.values(rest), ...Object.values(rest)],
    "/": [...Object.values(pages), InteractionsController, ...Object.values(pages), InteractionsController]
  },
  views: {
    root: join(process.cwd(), "../views"),
    extensions: {
      ejs: "ejs"
    }
  },
  swagger: [
    {
      "path": "/doc",
      "specVersion": "3.1.0"
    }
  ],
  middlewares: [
    "cors",
    "cookie-parser",
    "compression",
    "method-override",
    "json-parser",
    {
      "use": "urlencoded-parser",
      "options": {
        "extended": true
      }
    }
  ]
})
export class Server {
  protected app = application();
}
"
`;
