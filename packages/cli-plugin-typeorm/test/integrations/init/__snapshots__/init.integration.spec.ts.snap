// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`TypeORM: Init cmd > should generate a project with the right options 2`] = `
"import {join} from "node:path";
import {Configuration} from "@tsed/di";
import {application} from "@tsed/platform-http";
import "@tsed/platform-log-request"; // remove this import if you don&#x27;t want log request
import "@tsed/platform-express"; // /!\\ keep this import
import "@tsed/ajv";
import {config} from "./config/index.js";
import * as rest from "./controllers/rest/index.js";

@Configuration({
  ...config,
  acceptMimes: ["application/json"],
  httpPort: process.env.PORT || 8083,
  httpsPort: false, // CHANGE
  mount: {
    "/rest": [
      ...Object.values(rest)
    ]
  },
  middlewares: [
    "cors",
    "cookie-parser",
    "compression",
    "method-override",
    "json-parser",
    { use: "urlencoded-parser", options: { extended: true }}
  ],
  views: {
    root: join(process.cwd(), "../views"),
    extensions: {
      ejs: "ejs"
    }
  }
})
export class Server {
  protected app = application();
}
"
`;

exports[`TypeORM: Init cmd > should generate a project with the right options 3`] = `
"import {registerProvider} from "@tsed/di";
import {DataSource} from "typeorm";
import {Logger} from "@tsed/logger";

export const MysqlDatasource = Symbol.for("MysqlDatasource");
export type MysqlDatasource = DataSource;
export const mysqlDatasource = new DataSource({
  type: "mysql",
  entities: [],
  host: "localhost",
  port: 3306,
  username: "test",
  password: "test",
  database: "test"
});


registerProvider<DataSource>({
  provide: MysqlDatasource,
  type: "typeorm:datasource",
  deps: [Logger],
  async useAsyncFactory(logger: Logger) {
    await mysqlDatasource.initialize();

    logger.info("Connected with typeorm to database: Mysql");

    return mysqlDatasource;
  },
  hooks: {
    $onDestroy(dataSource) {
      return dataSource.isInitialized && dataSource.close();
    }
  }
});
"
`;

exports[`TypeORM: Init cmd > should generate a project with the right options 4`] = `undefined`;
