import {join} from "node:path";
import {Configuration} from "@tsed/di";
import {application} from "@tsed/platform-http";
{{#forEach imports}}{{#if tsIngore}}
// @ts-ignore
{{/if}}import {{symbols}}{{#if symbols}} from {{/if}}"{{from}}";{{comment}}
{{/forEach}}

@Configuration({
  ...config,
  acceptMimes: ["application/json"],
  httpPort: process.env.PORT || 8083,
  httpsPort: false, // CHANGE
  disableComponentsScan: true,
  ajv: {
    returnsCoercedValues: true
  },
  mount: {
    "{{route}}": [
      ...Object.values(rest)
    ]{{#or swagger oidc}},
    "/": [{{#if swagger}}
      ...Object.values(pages){{/if}}{{#and swagger oidc}},{{/and}}{{#if oidc}}
      InteractionsController{{/if}}
    ]{{/or}}
  },{{#if swagger}}
  swagger: [
    {
      path: "/doc",
      specVersion: "3.0.1"
    }
  ],{{/if}}{{#if scalar}}
  scalar: [
    {
      path: {{#if swagger}}"/scalar/doc"{{else}}"/doc"{{/if}},
      specVersion: "3.0.1"
    }
  ],{{/if}}
  middlewares: [{{#if express}}
    "cors",
    "cookie-parser",
    "compression",
    "method-override",
    "json-parser",
    { use: "urlencoded-parser", options: { extended: true }}{{/if}}{{#if koa}}
    "@koa/cors",
    "koa-compress",
    "koa-override",
    "koa-bodyparser"{{/if}}
  ],
  views: {
    root: join(process.cwd(), "../views"),
    extensions: {
      ejs: "ejs"
    }
  },
  exclude: [
    "**/*.spec.ts"
  ]
})
export class {{symbolName}} {
  protected app = application();
}
